target Cpp {
  cmake-include: "testing.cmake"
}

import Planner from "../src/control/Planner.lf"
import SanityChecker from "../src/control/SanityChecker.lf"
import PathPlanningTester from "planner_testing/PathPlanningTester.lf"
import CSVPath from "planner_testing/CSV_Path.lf"

public preamble {=
  #ifndef TEST_START_UP
  #define TEST_START_UP
  #include "random_vectors_handler.hpp"

  #endif //XARM7
=}

main reactor TestStartUp {
  // the planner should at every point in time receive an input triplet and give back an input triplet
  planner = new Planner(max_step_length = 1, threshold_deaccelerate = 5, threshold_near_target_stop_moving = 0.1, acceleration_cap = 0.3)
  sanity_checker = new SanityChecker()

  planning_tester = new PathPlanningTester(stop_after_steps = 20, number_of_paths_to_analyze = 120,
      random_vectors_handler = {=
        RandomVectorsHandler{"testing/testing_input_data/random_vectors.csv"}
      =})
  CSV_path = new CSVPath()

  // Planner --> Velocity Control
  planner.sanity_checker_next_position-> sanity_checker.sanity_checker_next_position

  // Velocity Control --> Interface
  sanity_checker.next_position_checked -> planning_tester.next_position_checked

  // Planner Tester --> Planner | Velocity Control
  planning_tester.planner_raw_instruction -> planner.planner_raw_instruction
  planning_tester.planner_current_position -> planner.planner_current_position
  planning_tester.planner_last_position -> planner.planner_last_position


  // Planner Tester <--> CSV_path
  planning_tester.transfer_travelled_path -> CSV_path.robo_path
  planning_tester.transfer_file -> CSV_path.file
}
