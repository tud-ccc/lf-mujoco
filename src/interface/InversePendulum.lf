target Cpp;

public preamble {=
  #include <mujoco/mujoco.h>
  #include "../src/world.hpp"

  template <typename T> int sgn(T val) {
    return (T(0) < val) - (val < T(0));
  }

=}

reactor InversePendulumInterfaceSimulated {
  // controller facing
  input[1] controller_signals: double;
  output controller_world_data: WorldData;
  
  // simulator facing
  input simulator_world_data: WorldData;
  output simulator_signals: std::vector<double>;

  reaction (simulator_world_data) -> controller_world_data {=
    controller_world_data.set(*simulator_world_data.get());
  =}

  // reactions forwarding data
  reaction (controller_signals) -> simulator_signals {=
    std::vector<double> input{0};
    input.resize(1);
    
    for (auto i: controller_signals.present_indices_unsorted()) {
      input[i] = *controller_signals[i].get();
    }
   
    simulator_signals.set(input);
  =}
}
