target Cpp;

public preamble {=
  #ifndef CAMERA_LF
  #define CAMERA_LF

  #include "common_vector.hpp"
  #include "common_coordinate_transformation.hpp"
  #include "camera_library_includes.hpp"
  #include <librealsense2/rs.hpp>
  #include <iostream>

  #endif //CAMERA_LF
=}

private preamble {=

=}

reactor Camera(start_stream: time = 1s, frame_fetch_period: time = 5ms, stream_width: int = 0, stream_height: int = 0)
 {
  timer t(start_stream, frame_fetch_period)
  output controller_interface_target: Position
  state pipe: {=rs2::pipeline=}
  state texture: {=custom_benes_texture=}
  state app:{=window=}


  reaction(startup) {=
      this->app = init_camera_generate_window(this->pipe, stream_width, stream_height);
  =}

  reaction(t) -> controller_interface_target {=
    receive_current_target(this->pipe, this->texture, this->app);
  =}
}
