target Cpp

public preamble {=
  #ifndef XARM7
  #define XARM7
  #include "common_vector.hpp"


  #endif //XARM7
=}

private preamble {=
   #include <iostream>
=}

reactor RobotControl {
  timer t(200 ms, 750 ms)
  output raw_instruction: Vector
  input current_position:Vector
  //not constant
  state counter: int
  state last_raw_instruction: Vector
  //constant
  state positions: std::vector<Vector>
  

  reaction(startup) {=   
  this->positions.push_back(Vector{400, -75, 0 });
  this->positions.push_back(Vector{475, 0, 0 });
  this->positions.push_back(Vector{400, 75, 0 });
  this->positions.push_back(Vector{325, 0, 0 });
  =}

  reaction(current_position) -> raw_instruction {=
      raw_instruction.set(this->last_raw_instruction);
  =}
  reaction(t) {=
    this->last_raw_instruction = this->positions.at(counter);
    this->last_raw_instruction.to_string();
    this->counter = (counter + 1) % 4;
=}
}

