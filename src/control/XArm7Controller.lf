target Cpp

public preamble {=
  #ifndef XARM7
  #define XARM7
  #include "common_vector.hpp"


  #endif //XARM7
=}

private preamble {=
  #include <iostream>
=}

reactor RobotControl(timer_change_target: time = 1s, timer_start_change_target_period = 2s, positions:
               {= Vector[4] =} = {=
            {
              Vector{0, 0, 0 }, Vector{0, 0, 0 }, Vector{0, 0, 0}, Vector{0, 0, 0}
            }
               =})
            // {=  Vector[14] =} = {=
            // {
            // Vector{0,0,0}, Vector{0,0,0}, Vector{0,0,0}, Vector{0,0,0},
            //  Vector{0,0,0}, Vector{0,0,0}, Vector{0,0,0}, Vector{0,0,0},
            //  Vector{0,0,0}, Vector{0,0,0}, Vector{0,0,0}, Vector{0,0,0},
            //  Vector{0,0,0}, Vector{0,0,0}
            // }
            // =})

 {
  timer t(timer_change_target, timer_start_change_target_period)
  output raw_instruction: Vector
  input robot_control_current_position: Vector
  state counter: int = 0  // not constant
  state last_raw_instruction: Vector

  // constant
  reaction(startup) {=
    last_raw_instruction = positions[counter];
  =}

  reaction(robot_control_current_position) -> raw_instruction {=
    raw_instruction.set(this->last_raw_instruction);
  =}

  reaction(t) {=
    // only changes the current raw instruction
    this->last_raw_instruction = positions[counter];
    this->last_raw_instruction.to_string();
    this->counter = (counter + 1) % 4;
  =}
}
