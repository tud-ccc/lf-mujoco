target Cpp

public preamble {=
  #ifndef SANITY_CHECKER
  #define SANITY_CHECKER
  #include "common_vector.hpp"
  #include "common_planner_sanity_checker_logic.hpp"


  #endif //VELOCITY_CONTROL
=}

reactor SanityChecker(acceleration_cap: double = 0, max_step_length: double = 0) {
  
  input sanity_checker_last_position: Position
  input sanity_checker_current_position: Position
  input sanity_checker_next_position: Position

  output next_position_checked: Position

  reaction(sanity_checker_last_position, sanity_checker_current_position, sanity_checker_next_position) -> next_position_checked {=
    Position last_position = (*sanity_checker_last_position.get());
    Position current_position = (*sanity_checker_current_position.get());
    Position next_position = (*sanity_checker_next_position.get());

    SanityCheckerLogic scl_coordinates = SanityCheckerLogic{acceleration_cap, max_step_length};

    scl_coordinates.planner_sanity_check_next_position(last_position.get_coordinates(), current_position.get_coordinates(), next_position.get_coordinates());
    
    next_position_checked.set(next_position);
    =}

  reaction(startup){=
  =}

  

}
