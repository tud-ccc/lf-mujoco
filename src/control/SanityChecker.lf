target Cpp

public preamble {=
  #ifndef SANITY_CHECKER
  #define SANITY_CHECKER
  #include "common_vector.hpp"
  #include "common_sanity_checker_logic.hpp"


  #endif //VELOCITY_CONTROL
=}

reactor SanityChecker(acceleration_cap: double = 0, max_step_length: double = 0) {
  
  input sanity_checker_last_position: Vector
  input sanity_checker_current_position: Vector
  input sanity_checker_next_position: Vector

  output next_position_checked: Vector

  reaction(sanity_checker_last_position, sanity_checker_current_position, sanity_checker_next_position) -> next_position_checked {=
    Vector vector_sanity_checker_last_position = *sanity_checker_last_position.get();
    Vector vector_sanity_checker_current_position = *sanity_checker_current_position.get();
    Vector vector_sanity_checker_next_position = *sanity_checker_next_position.get();

    SanityCheckerLogic scl = SanityCheckerLogic{acceleration_cap, max_step_length};
    scl.sanity_check_next_position(vector_sanity_checker_last_position, vector_sanity_checker_current_position, vector_sanity_checker_next_position);
    next_position_checked.set(vector_sanity_checker_next_position);
    =}

  reaction(startup){=
  =}

  

}
