target Cpp

public preamble {=
  #ifndef SANITY_CHECKER
  #define SANITY_CHECKER
  #include "common_position_evaluator.hpp"
  #include "common_vector.hpp"

  #endif //SANITY_CHECKER
=}

reactor Planner(acceleration_cap : double = 0, max_step_length : double = 0 ) {
  input planner_raw_instruction: Vector
  input planner_current_position: Vector
  input planner_last_position: Vector

  output velocity_control_next_position: Vector


  reaction(planner_current_position,planner_last_position, planner_raw_instruction) -> velocity_control_next_position {=

        Vector  vector_current_position = *planner_current_position.get();
        Vector  vector_last_position = *planner_last_position.get();
        Vector  vector_raw_instruction = *planner_raw_instruction.get();


        PositionEvaluator pe = PositionEvaluator{acceleration_cap, max_step_length};
        
        Vector vector_next_position_no_velocity_control = pe.calculate_next_position(vector_last_position, vector_current_position,vector_raw_instruction);
        velocity_control_next_position.set(vector_next_position_no_velocity_control);
  =}

}
