target Cpp

public preamble {=
  #ifndef SANITY_CHECKER
  #define SANITY_CHECKER
  #include "common_vector.hpp"

  #endif //SANITY_CHECKER
=}

reactor Planner(acceleration_cap: double = 0, max_step_length: double = 0) {
  private preamble {=


    VectorCollectionVelocityControl calculate_offset_vector_given_max_acceleration(Vector last_position, Vector current_position,
                                                                             Vector raw_instruction, double max_step_length, double acceleration_cap){
      
  =}

  input planner_raw_instruction: Vector
  input planner_current_position: Vector
  input planner_last_position: Vector

  output velocity_control_vector_collection: VectorCollectionVelocityControl

  reaction(planner_current_position, planner_last_position, planner_raw_instruction) ->
  velocity_control_vector_collection {=
    Vector  vector_current_position = *planner_current_position.get();
    Vector  vector_last_position = *planner_last_position.get();
    Vector  vector_raw_instruction = *planner_raw_instruction.get();

    VectorCollectionVelocityControl vcvc = calculate_offset_vector_given_max_acceleration(vector_last_position, vector_current_position, vector_raw_instruction, max_step_length, acceleration_cap);

    velocity_control_vector_collection.set(vcvc);
  =}
}
