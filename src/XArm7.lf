target Cpp{
    cmake-include: "xarm.cmake",
};


import SanityChecker from "interface/SanityChecker.lf";
import WorldDataDecoder from "interface/WorldDataDecoder.lf";
import XArmInterface from "interface/XArmInterface.lf";
import RoboXArm7 from "hardware/RoboXArm7.lf";
import CSVData from "collect_data/CSVData.lf";



public preamble {=

#ifndef XARM7
#define XARM7
#include "common_sanity_checker.hpp"

#endif //XARM7

        =}


reactor RobotControl (stride: double  = 5, hypotenuse: double = 75){

   

input current_position: void;        
output raw_instruction: void;

// reaction(current_position) -> raw_instruction{=


// =}



}



main reactor XArm7{

    controller = new RobotControl();
    decoder = new WorldDataDecoder();
    sanity_checker = new SanityChecker();
    interface = new XArmInterface();
    hardware = new RoboXArm7();
    data_collector = new CSVData();

    controller.raw_instruction -> sanity_checker.raw_instruction;
    sanity_checker.checked_instruction -> interface.checked_instruction;

    interface.robo_checked_instruction -> hardware.robo_checked_instruction;
    hardware.interface_world_data -> interface.interface_world_data;

    interface.decoder_world_data -> decoder.decoder_world_data;    
    decoder.current_position -> controller.current_position;
    decoder.current_position -> sanity_checker.current_position;

    //CSV DATA
    controller.raw_instruction ->data_collector.raw_instruction;
    sanity_checker.checked_instruction -> data_collector.checked_instruction; 
    decoder.current_position ->  data_collector.current_position;

}